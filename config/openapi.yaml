openapi: 3.0.3
info:
  title: Test task API
  description: "Author: Oleg Osinniy"
  version: 1.0.0
servers:
  - url: http://localhost:3000

paths:
  /api/v1/products:
    get:
      description: Get all products
      tags:
        - Products
      responses:
        200:
          description: Products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Product"
        500:
          $ref: "#/components/schemas/Error"
    post:
      description: Create product
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - merchant_id
                - price
                - status
              properties:
                name:
                  type: string
                  example: "Coconut"
                merchant_id:
                  type: number
                  example: 1
                price:
                  type: number
                  example: 1
                status:
                  type: string
                  example: "status"
      responses:
        201:
          description: Product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        400:
          $ref: "#/components/schemas/Error"
        500:
          $ref: "#/components/schemas/Error"
  /api/v1/orders/{orderId}/products:
    get:
      description: Get all products in order
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Product"
        400:
          $ref: "#/components/schemas/Error"
        500:
          $ref: "#/components/schemas/Error"
  /api/v1/orders:
    post:
      description: Create order
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - status
              properties:
                user_id:
                  type: number
                  example: 1
                status:
                  type: string
                  example: "test"
      responses:
        201:
          description: Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Order"
        400:
          $ref: "#/components/schemas/Error"
        500:
          $ref: "#/components/schemas/Error"
  /api/v1/orders/{orderId}/products/{productId}:
    post:
      description: Add product to order
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: integer
            example: 1
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: number
                  example: 1
      responses:
        201:
          description: Order
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/OrderItem"
        400:
          $ref: "#/components/schemas/Error"
        500:
          $ref: "#/components/schemas/Error"
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "Coconut"
        merchant_id:
          type: number
          example: 1
        price:
          type: number
          example: 1
        status:
          type: string
          example: "in_stock"
        created_at:
          type: string
          example: "2022-05-27T19:55:58.000Z"
    Order:
      type: object
      properties:
        id:
          type: number
          example: 1
        user_id:
          type: number
          example: 1
        status:
          type: string
          example: "in_stock"
        created_at:
          type: string
          example: "2022-05-27T19:55:58.000Z"
    OrderItem:
      type: object
      properties:
        id:
          type: number
          example: 1
        order_id:
          type: number
          example: 1
        product_id:
          type: number
          example: 1
        quantity:
          type: number
          example: 20
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: NotFoundError
            message:
              type: string
              example: "URL \"thisurlidmakesnosenseatall\" not found"

